@model Polyclinic.Web.Models.PageViewModel<Polyclinic.Web.Models.PatientViewModel>

@{
    ViewData["Title"] = "GetPatients";
    string hasPreviousPage = Model.HasPreviousPage ? "" : "disabled";
    string hasNextPage = Model.HasNextPage ? "" : "disabled";
    string controller = "Patient";
    string action = "GetPatients";
    var pageSize = ViewBag.pageSize;
}


<div class="d-flex justify-content-between mb-2">
    <h1>All Patients</h1>
    <div class="mt-2">
        <a asp-action="CreatePatient" asp-controller="Patient" class="btn btn-primary">Create New Patient</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().PatientFullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Policy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PatientFullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Policy)
            </td>
            <td>
                <div class="d-flex justify-content-end px-3">
                    @Html.ActionLink("Edit", "EditPatient", new { id = item.PatientId }, new { @class = "btn btn-outline-primary btn-sm" })
                    @Html.ActionLink("Delete", "DeletePatient", new { id = item.PatientId }, new { @class = "btn btn-outline-danger btn-sm ml-3" })
                </div>
            </td>
        </tr>
}
    </tbody>
</table>


<ul class="pagination">
    <li class="page-item @hasPreviousPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-pageSize="@pageSize">Previous</a>
    </li>

    @if (Model.StartPage > 1)
    {
        <li class="page-item @(1 == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="1" asp-route-pageSize="@pageSize">1</a>
        </li>
    }

    @if (Model.StartPage > 2)
    {

        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.TotalPages != 0)
    {
        @for (int i = Model.StartPage; i <= Model.LastPage; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@i" asp-route-pageSize="@pageSize">@i</a>
            </li>
        }
    }

    @if (Model.LastPage < Model.TotalPages - 1)
    {
        <li class="page-item disabled">
            <p class="page-link">...</p>
        </li>
    }

    @if (Model.LastPage < Model.TotalPages)
    {
        <li class="page-item @(Model.TotalPages == Model.PageIndex ? "disabled" : "")">
            <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@Model.TotalPages" asp-route-pageSize="@pageSize">@Model.TotalPages</a>
        </li>
    }

    <li class="page-item @hasNextPage">
        <a class="page-link" asp-action="@action" asp-controller="@controller" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-pageSize="@pageSize">Next</a>
    </li>
</ul>